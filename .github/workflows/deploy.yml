name: Deploy to S3 and Invalidate CloudFront

on:
  push:
    branches:
      - main  # Deploy when code is pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create firebaseconfig.js
      run: |
        echo "export default {" > frontend/src/firebaseconfig.js
        echo "  apiKey: '${{ secrets.VITE_FIREBASE_API_KEY }}'," >> frontend/src/firebaseconfig.js
        echo "  authDomain: '${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}'," >> frontend/src/firebaseconfig.js
        echo "  projectId: '${{ secrets.VITE_FIREBASE_PROJECT_ID }}'," >> frontend/src/firebaseconfig.js
        echo "  storageBucket: '${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}'," >> frontend/src/firebaseconfig.js
        echo "  messagingSenderId: '${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}'," >> frontend/src/firebaseconfig.js
        echo "  appId: '${{ secrets.VITE_FIREBASE_APP_ID }}'" >> frontend/src/firebaseconfig.js
        echo "};" >> frontend/src/firebaseconfig.js

    - name: Install dependencies
      working-directory: frontend
      run: npm install

    - name: Build project
      working-directory: frontend
      run: npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Sync S3 bucket
      working-directory: frontend
      run: aws s3 sync dist/ s3://${{ secrets.S3_BUCKET_NAME }} --delete

    - name: Invalidate CloudFront cache
      working-directory: frontend
      run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
